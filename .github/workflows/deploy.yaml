name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.18.0'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image - backend
      id: backend_image
      run: |
        docker build -t cmaundu/bytestream-backend:latest ./backend
        docker push cmaundu/bytestream-backend:latest
        echo "::set-output name=tag::cmaundu/bytestream-backend:latest"

    - name: Build and push Docker image - frontend
      id: frontend_image
      run: |
        docker build -t cmaundu/bytestream-frontend:latest ./frontend
        docker push cmaundu/bytestream-frontend:latest
        echo "::set-output name=tag::cmaundu/bytestream-frontend:latest"

    - name: Update manifests with new backend image
      run: |
        sed -i "s~image:.*backend.*$~image: ${{ steps.backend_image.outputs.tag }}~g" k8s/backend-deployment.yaml

    - name: Update manifests with new frontend image
      run: |
        sed -i "s~image:.*frontend.*$~image: ${{ steps.frontend_image.outputs.tag }}~g" k8s/frontend-deployment.yaml

    - name: Decode and set KUBECONFIG
      run: |
        echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
        mkdir -p ~/.kube
        mv $HOME/.kube/config ~/.kube/config

    - name: List kubeconfig files
      run: |
        ls -la $HOME/.kube
        cat $HOME/.kube/config

    - name: Verify kubectl configuration
      env:
        KUBECONFIG: $HOME/.kube/config
      run: |
        kubectl config view
        kubectl get nodes

    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: $HOME/.kube/config
      run: |
        kubectl apply -f k8s/backend-deployment.yaml
        kubectl apply -f k8s/backend-service.yaml
        kubectl apply -f k8s/frontend-deployment.yaml
        kubectl apply -f k8s/frontend-service.yaml
        kubectl apply -f k8s/ingress.yaml
